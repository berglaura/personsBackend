{"version":3,"sources":["Filter.js","Notification.js","PersonForm.js","Persons.js","services/contacts.js","App.js","index.js"],"names":["Filter","condition","handleCondition","value","onChange","Notification","message","errorMessage","className","PersonForm","props","onSubmit","addContact","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","removeContact","condPersons","filter","person","name","toUpperCase","includes","map","number","id","onClick","e","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setCondition","setMessage","setErrorMessage","useEffect","contactService","initialContacts","event","target","preventDefault","alert","contact","find","changedContact","returnedContact","setTimeout","catch","error","returnedContacts","concat","objects","nameArr","window","confirm","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e5ff472.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Filter = ({ condition, handleCondition }) => {\n    return (\n        <div>\n            filter shown with: <input\n                value={condition}\n                onChange={handleCondition}/>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Notification = ({ message, errorMessage }) => {\n    if (message === null && errorMessage === null) {\n        return null\n    } else if (message !== null && errorMessage === null) {\n        return (\n            <div className=\"message\">\n                {message}\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"error\">\n                {errorMessage}\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport const PersonForm = (props) => {\n    return (\n        <div>\n        <form onSubmit={props.addContact}>\n            <div>\n                name: <input\n                    value={props.newName}\n                    onChange={props.handleNameChange} />\n            </div>\n            <div>\n                number: <input\n                    value={props.newNumber}\n                    onChange={props.handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Persons = ({ persons, condition, removeContact }) => {\n  const condPersons = persons.filter(person => person.name.toUpperCase().includes(condition.toUpperCase()))\n\n  return (\n    <div>\n      {condPersons.map(person => (\n        <div key={person.name}>\n          <p>\n            {person.name} {person.number}\n          </p>\n          <button\n            id={person.id}\n            onClick={(e) => removeContact(person.id, e)}>delete</button>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id, newObject) => {\n    const request = axios.delete(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react';\nimport { Filter } from './Filter';\nimport { Notification } from './Notification';\nimport { PersonForm } from './PersonForm';\nimport { Persons } from './Persons';\nimport contactService from './services/contacts';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  \n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [condition, setCondition] = useState('');\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts);\n      })\n  }, []);\n\n  const addContact = (event) => {\n    event.preventDefault();\n    const person = {name: newName, number: newNumber}\n\n    const names = persons.map((person) => person.name);\n    if (names.includes(newName)) {\n      alert(`${newName} is already added to phonebook, replace the old number with a new one?`);\n      const contact = persons.find(person => person.name === newName)\n      const changedContact = {...person, number: newNumber}\n      const id = contact.id\n      contactService\n        .update(id, changedContact)\n        .then(returnedContact => {\n          setPersons(persons.map(person => person.id !== id ? person : returnedContact))\n          setNewName('');\n          setNewNumber('');\n          setMessage(`${person.name}'s number changed`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 4000)\n        })\n        \n        .catch(error => {\n          setErrorMessage(\n            `Information of ${person.name} has already been removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 4000)\n        })\n\n    } else {\n      contactService\n        .create(person)\n        .then(returnedContacts => {\n          setPersons(persons.concat(returnedContacts));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`${person.name} added`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 4000)\n        })\n        \n      \n    }\n  }\n\n  const removeContact = (id, event) => {\n    const objects = persons.filter(person => person.id !== id)\n    const object = persons.filter(person => person.id === id)\n    const nameArr = object.map(person => person.name)\n\n      if (window.confirm(`Delete ${nameArr[0]}?`)) {\n        console.log(id)\n        contactService\n          .remove(id)\n      }\n      setPersons(objects)\n      setMessage(`${nameArr[0]} removed`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 4000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleCondition = (event) => {\n    setCondition(event.target.value);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={message}\n        errorMessage={errorMessage}/>\n      <Filter condition={condition} handleCondition={handleCondition}/>\n      <h2>add a new</h2>\n      <PersonForm addContact={addContact}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        condition ={condition}\n        removeContact={removeContact}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}